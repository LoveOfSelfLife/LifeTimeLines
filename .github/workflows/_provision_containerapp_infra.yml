# 
# GitHub Actions workflow.
#

name: __Provision Azure Container App
on:
  workflow_call:
    inputs:
      containerapp_name:
        required: true
        type: string
      containerapp_environment_rg:
        required: true
        type: string
      containerapp_environment_name:
        required: true
        type: string
      container_registry_image:
        required: true
        type: string
      containerapp_template:
        required: true
        type: string
      containerapp_location:
        required: true
        type: string
      queue_name:
        required: true
        type: string
              
    secrets:
      container_registry:
        required: true
      container_registry_id:
        required: true
      container_registry_pw:
        required: true
      azure_credentials:
        required: true
      azure_storagetable_connectionstring:
        required: true
      azure_fileshare_connectionstring:
        required: true
      aad_client_id:
        required: true
      aad_client_secret:
        required: true
      google_client_secret_base64:
        required: true
      tenant_id:
        required: true
      subscription_id:
        required: true
      b2c_tenant_name:
        required: true
      b2c_client_id:
        required: true
      b2c_client_secret:
        required: true
      redirect_uri:
        required: true

jobs:

  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      
      # Checks-out your repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v2

      - name: Set environment variable
        run: |
          for varval in $(cat ./services/${{ inputs.containerapp_name }}/build_vars.txt);
            do
              echo $varval >> $GITHUB_ENV
            done
      - name: Use environment variable
        run: |
          echo "The value of ACA_TEMPLATE is $ACA_TEMPLATE"
          echo "The value of ACA_TEMPLATE"
          echo $ACA_TEMPLATE

      - name: 'Az CLI login'
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.azure_credentials }}

      - name: 'Provision / Update Container App'
        uses: Azure/cli@v1
        with:
          inlineScript: >
            echo "Deploy Container App ${{ inputs.containerapp_name }} via ARM Template";
            cd arm;
            az deployment group create
            --resource-group ${{ inputs.containerapp_environment_rg }}
            --template-file $ACA_TEMPLATE
            --query "properties.provisioningState"
            --parameters 
            "containerapp-name"="${{ inputs.containerapp_name }}"
            "containerapp-location"="${{ inputs.containerapp_location }}"
            "containerapp-environment-rg"="${{ inputs.containerapp_environment_rg }}"
            "containerapp-environment-name"="${{ inputs.containerapp_environment_name }}"
            "container-registry-image"="${{ inputs.container_registry_image }}"
            "queue-name"="${{ inputs.queue_name }}"
            "container-registry"="${{ secrets.container_registry }}"
            "container-registry-id"="${{ secrets.container_registry_id }}"
            "container-registry-pw"="${{ secrets.container_registry_pw }}"
            "azure-storagetable-connectionstring"="${{ secrets.azure_storagetable_connectionstring }}"
            "azure-fileshare-connectionstring"="${{ secrets.azure_fileshare_connectionstring }}"            
            "aad-client-id"="${{ secrets.aad_client_id }}"
            "aad-client-secret"="${{ secrets.aad_client_secret }}"
            "google-client-secret-base64"="${{ secrets.google_client_secret_base64 }}"
            "tenant-id"="${{ secrets.tenant_id }}"
            "subscription-id"="${{ secrets.subscription_id }}"
            "b2c-tenant-name"="${{ secrets.b2c_tenant_name }}"
            "b2c-client-id"="${{ secrets.b2c_client_id }}"
            "b2c-client-secret"="${{ secrets.b2c_client_secret }}"
            "redirect-uri"="${{ secrets.redirect_uri }}"
